<?php // $Id$

define (BRLCAD_NODETYPE, 'model');

/**
 * Implementation of hook_menu
 */
function brlcad_menu($may_cache) {
  $links = array();
  if($may_cache) {
      
  } else {
    $links[] = array(
      'path' => 'admin/content/brlcad',
      'title' => t('BRL-CAD'),
      'callback' => 'drupal_get_form',
      'callback arguments' => array('brlcad_general_settings'),
    );
  }
  return $links;
}

/**
 * General settings form for BRL-CAD.
 */
function brlcad_general_settings() {
  $form = array();
  $form['system'] = array(
    '#type' => 'fieldset',
    '#title' => t('BRL-CAD system'),
    '#tree' => false,
  );
  $form['system']['brlcad_version'] = array(
    '#type' => 'select',
    '#title' => t('Version'),
    '#options' => _brlcad_supported_versions(),
    '#default_value' => variable_get('brlcad_version', '7.12'),
    '#required' => true,
  );
  $form['system']['brlcad_bin_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Path to binaries'),
    '#default_value' => variable_get('brlcad_bin_path', '/usr/brlcad/bin'),
    '#required' => true,
  );
  $form['queues'] = array(
    '#type' => 'fieldset',
    '#title' => t('Processing queues'),
    '#tree' => false,
    '#description' => t('Use distinct queues for each task. Nodes will be automatically removed from queues after processing.'),
  );
  return system_settings_form($form);
}

/**
 * Implementation of hook_nodeapi
 */
function brlcad_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if($node->type != BRLCAD_NODETYPE) {
    return;
  }
  switch($op) {
    default:
      break;
    case 'insert':
    case 'update':
      brlcad_raytrace($node);
  var_dump($op,$node, $a3, $a4);
      $node->status = 0;
      break;
  }
}

function brlcad_raytrace(&$node) {
  //var_dump($node);
}

function _brlcad_supported_versions() {
  static $supported;
  if(!isset($supported)) {
    $supported = array(
      '7.12', '7.10', '7.8', '7.6', '7.4', '7.2', '7.0'
    );
    $supported = array_combine($supported, $supported);
  }
  return $supported;
}